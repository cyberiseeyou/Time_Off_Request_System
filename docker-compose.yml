services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: time-off-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - time-off-network

  # API Service
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: time-off-api
    environment:
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - API_PORT=${API_PORT}
      - NODE_ENV=${NODE_ENV}
    ports:
      - "${API_PORT}:8000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - api_data:/app/database
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - time-off-network

  # Web Frontend Service (ready for future implementation)
  web:
    profiles: ["web", "full"]  # Only starts when specifically requested
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: time-off-web
    environment:
      - API_URL=http://api:8000
      - WEB_PORT=${WEB_PORT}
      - NODE_ENV=${NODE_ENV}
    ports:
      - "${WEB_PORT}:3000"
    depends_on:
      - api
    networks:
      - time-off-network

  # n8n Workflow Service
  n8n:
    profiles: ["n8n", "full"]  # Only starts when specifically requested
    image: n8nio/n8n:latest
    container_name: time-off-n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}
    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - time-off-network

volumes:
  mysql_data:
    driver: local
  api_data:
    driver: local
  n8n_data:
    driver: local

networks:
  time-off-network:
    driver: bridge